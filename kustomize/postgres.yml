---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
    - port: 5432
      protocol: TCP
      targetPort: postgres-5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  minReadySeconds: 10
  progressDeadlineSeconds: 30
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
      serviceAccountName: postgres-svc-acct
      volumes:
        - name: postgres-volume
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: postgres-tmp
          emptyDir:
            sizeLimit: 100Mi
        - name: postgres-lock
          emptyDir:
            sizeLimit: 100Mi
      containers:
        - name: postgres
          volumeMounts:
            - name: postgres-volume
              mountPath: /nautobot
            - name: postgres-tmp
              mountPath: /tmp
            - name: postgres-lock
              mountPath: /var/run/postgresql/
          envFrom:
            - configMapRef:
                name: config-from-env-files
            - secretRef:
                name: secret-from-env-files
          env:
            - name: PGDATA
              value: /nautobot/data
          securityContext:
            # readOnlyRootFilesystem: true
            privileged: false
            allowPrivilegeEscalation: false
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 3
            periodSeconds: 3
          image: postgres:13-alpine
          imagePullPolicy: Always
          tty: true
          ports:
            - containerPort: 5432
              name: postgres-5432
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 5432
